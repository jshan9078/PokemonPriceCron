name: Daily Price Update

on:
  # Run daily at 6PM EST (11PM UTC)
  schedule:
    - cron: '0 23 * * *'

  # Run when script or workflow changes are pushed
  push:
    branches:
      - main
    paths:
      - 'scripts/daily-price-update.ts'
      - '.github/workflows/daily-price-update.yml'
      - 'package.json'
      - 'package-lock.json'

  # Allow manual trigger from GitHub UI
  workflow_dispatch:

jobs:
  update-prices:
    runs-on: ubuntu-latest

    steps:
      # Checkout only the necessary files (not the entire repo)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            scripts/daily-price-update.ts
            package.json
            package-lock.json
            tsconfig.json
            product-blacklist.json
          sparse-checkout-cone-mode: false

      # Restore blacklist from cache
      - name: Restore blacklist cache
        uses: actions/cache/restore@v4
        with:
          path: product-blacklist.json
          key: product-blacklist-${{ github.run_id }}
          restore-keys: |
            product-blacklist-

      # Install p7zip for 7z extraction
      - name: Install 7zip
        run: |
          sudo apt-get update
          sudo apt-get install -y p7zip-full
          which 7z

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Run the daily price update script
      - name: Run daily price update
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          DATA_DIR: /tmp/tcg-data
          TEMP_DOWNLOAD_DIR: /tmp/tcg-price-data
          SEVEN_ZIP_PATH: /usr/bin/7z
        run: |
          npx tsx scripts/daily-price-update.ts

      # Save updated blacklist to cache
      - name: Save blacklist cache
        uses: actions/cache/save@v4
        if: always()  # Save even if the update script fails
        with:
          path: product-blacklist.json
          key: product-blacklist-${{ github.run_id }}

      # Cleanup is automatic - GitHub Actions runner is destroyed after job
